{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zakas\\\\Desktop\\\\React\\\\my-app\\\\src\\\\components\\\\task-filter\\\\tasks-filter.js\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TaskFilter extends Component {\n  constructor() {\n    super(...arguments);\n    this.buttons = [{\n      name: \"all\",\n      label: \"All\"\n    }, {\n      name: \"active\",\n      label: \"Active\"\n    }, {\n      name: \"completed\",\n      label: \"Completed\"\n    }];\n  }\n  render() {\n    const {\n      clickButtonFilter,\n      activeButton\n    } = this.props;\n    const buttonFilter = this.buttons.map(_ref => {\n      let {\n        name,\n        label\n      } = _ref;\n      const isActive = activeButton === name;\n      const classButtonFilter = isActive ? \"selected\" : \"\";\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classButtonFilter,\n          onClick: () => clickButtonFilter(name),\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"filters\",\n      children: buttonFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n// export default class TaskFilter extends Component {\n//   constructor() {\n//     super();\n//     this.clickButtonFilter = () => {\n//       this.setState({\n//         used: true,\n//       });\n//\n//     };\n\n//     this.state = {\n//       used: false,\n//     };\n//   }\n//   render() {\n//     const { used } = this.state;\n\n//     let classNames = \"\";\n//     if (used) {\n//       classNames = \"selected\";\n//     }\n//     const buttonFilterNames = [\"All\", \"Active\", \"Completed\"];\n//     const buttonFilterName = buttonFilterNames.map((el, i) => {\n//       return (\n//         <li key={i}>\n//           <button onClick={this.clickButtonFilter} className={classNames}>\n//             {el}\n//           </button>\n//         </li>\n//       );\n//     });\n\n//     return <ul className=\"filters\">{buttonFilterName}</ul>;\n//   }\n// }","map":{"version":3,"names":["Component","TaskFilter","buttons","name","label","render","clickButtonFilter","activeButton","props","buttonFilter","map","isActive","classButtonFilter"],"sources":["C:/Users/zakas/Desktop/React/my-app/src/components/task-filter/tasks-filter.js"],"sourcesContent":["import { Component } from \"react\";\r\n\r\nexport default class TaskFilter extends Component {\r\n  buttons = [\r\n    { name: \"all\", label: \"All\" },\r\n    { name: \"active\", label: \"Active\" },\r\n    { name: \"completed\", label: \"Completed\" },\r\n  ];\r\n  render() {\r\n    const { clickButtonFilter, activeButton } = this.props;\r\n    const buttonFilter = this.buttons.map(({ name, label }) => {\r\n      const isActive = activeButton === name;\r\n      const classButtonFilter = isActive ? \"selected\" : \"\";\r\n\r\n      return (\r\n        <li key={name}>\r\n          <button\r\n            className={classButtonFilter}\r\n            onClick={() => clickButtonFilter(name)}\r\n          >\r\n            {label}\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return <ul className=\"filters\">{buttonFilter}</ul>;\r\n  }\r\n}\r\n\r\n// export default class TaskFilter extends Component {\r\n//   constructor() {\r\n//     super();\r\n//     this.clickButtonFilter = () => {\r\n//       this.setState({\r\n//         used: true,\r\n//       });\r\n//\r\n//     };\r\n\r\n//     this.state = {\r\n//       used: false,\r\n//     };\r\n//   }\r\n//   render() {\r\n//     const { used } = this.state;\r\n\r\n//     let classNames = \"\";\r\n//     if (used) {\r\n//       classNames = \"selected\";\r\n//     }\r\n//     const buttonFilterNames = [\"All\", \"Active\", \"Completed\"];\r\n//     const buttonFilterName = buttonFilterNames.map((el, i) => {\r\n//       return (\r\n//         <li key={i}>\r\n//           <button onClick={this.clickButtonFilter} className={classNames}>\r\n//             {el}\r\n//           </button>\r\n//         </li>\r\n//       );\r\n//     });\r\n\r\n//     return <ul className=\"filters\">{buttonFilterName}</ul>;\r\n//   }\r\n// }\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAAC;AAElC,eAAe,MAAMC,UAAU,SAASD,SAAS,CAAC;EAAA;IAAA;IAAA,KAChDE,OAAO,GAAG,CACR;MAAEC,IAAI,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAM,CAAC,EAC7B;MAAED,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAS,CAAC,EACnC;MAAED,IAAI,EAAE,WAAW;MAAEC,KAAK,EAAE;IAAY,CAAC,CAC1C;EAAA;EACDC,MAAM,GAAG;IACP,MAAM;MAAEC,iBAAiB;MAAEC;IAAa,CAAC,GAAG,IAAI,CAACC,KAAK;IACtD,MAAMC,YAAY,GAAG,IAAI,CAACP,OAAO,CAACQ,GAAG,CAAC,QAAqB;MAAA,IAApB;QAAEP,IAAI;QAAEC;MAAM,CAAC;MACpD,MAAMO,QAAQ,GAAGJ,YAAY,KAAKJ,IAAI;MACtC,MAAMS,iBAAiB,GAAGD,QAAQ,GAAG,UAAU,GAAG,EAAE;MAEpD,oBACE;QAAA,uBACE;UACE,SAAS,EAAEC,iBAAkB;UAC7B,OAAO,EAAE,MAAMN,iBAAiB,CAACH,IAAI,CAAE;UAAA,UAEtCC;QAAK;UAAA;UAAA;UAAA;QAAA;MACC,GANFD,IAAI;QAAA;QAAA;QAAA;MAAA,QAOR;IAET,CAAC,CAAC;IAEF,oBAAO;MAAI,SAAS,EAAC,SAAS;MAAA,UAAEM;IAAY;MAAA;MAAA;MAAA;IAAA,QAAM;EACpD;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}